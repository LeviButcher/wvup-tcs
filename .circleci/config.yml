# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2.1

executors:
  front-exec:
    docker:
      - image: circleci/node:10
    working_directory: ~/repo
  back-exec:
    docker:
      - image: mcr.microsoft.com/dotnet/core/sdk:2.2
    working_directory: ~/repo

jobs:
  checkout-code-front:
    executor: front-exec
    steps:
      - checkout
      - save_cache:
          key: v1-frontend-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/repo/frontend

  build-front:
    executor: front-exec
    steps:
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-frontend-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - v1-front-dependencies-{{ checksum "frontend/package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-front-dependencies-

      - run: cd frontend && npm install

      - save_cache:
          paths:
            - frontend/node_modules
          key: v1-front-dependencies-{{ checksum "frontend/package.json" }}

  test-front:
    executor: front-exec
    steps:
      - restore_cache:
          keys:
            - v1-frontend-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - v1-front-dependencies-{{ checksum "frontend/package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-front-dependencies-
      # run tests!
      - run: cd frontend && npm test

  deploy-front:
    executor: front-exec
    steps:
      - setup_remote_docker
      - restore_cache:
          keys:
            - v1-frontend-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - v1-front-dependencies-{{ checksum "frontend/package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-front-dependencies-

      - run: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run: docker build -t lcbutch/tcs-front:$CIRCLE_BRANCH frontend/
      - run: docker push lcbutch/tcs-front:$CIRCLE_BRANCH

  checkout-code-back:
    executor: back-exec
    steps:
      - checkout
      - save_cache:
          key: v1-backend-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/repo/backend

  build-back:
    executor: back-exec
    steps:
      - restore_cache:
          keys:
            - v1-backend-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - v1-back-dependencies-{{ checksum "backend/tcs-service/tcs-service.csproj" }}
            - v1-back-dependencies-

      - run: cd backend/ && dotnet restore tcs-service
      - run: cd backend/ && dotnet restore tcs-service-test

      - save_cache:
          paths:
            - ~/.nuget/packages
          key: v1-back-dependencies-{{ checksum "backend/tcs-service/tcs-service.csproj" }}

  test-back:
    executor: back-exec
    steps:
      - restore_cache:
          keys:
            - v1-backend-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - v1-back-dependencies-{{ checksum "backend/tcs-service/tcs-service.csproj" }}
            - v1-back-dependencies-
      - run: cd backend/ && dotnet test tcs-service-test

  deploy-back:
    executor: back-exec
    steps:
      - setup_remote_docker
      - restore_cache:
          keys:
            - v1-backend-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - v1-back-dependencies-{{ checksum "backend/tcs-service/tcs-service.csproj" }}
            # fallback to using the latest cache if no exact match is found
            - v1-back-dependencies-
      - run:
          name: Install Docker client
          command: |
            set -x
            VER="17.03.0-ce"
            curl -L -o /tmp/docker-$VER.tgz https://get.docker.com/builds/Linux/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin

      - run: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run: docker build -t lcbutch/tcs-service:$CIRCLE_BRANCH backend/tcs-service/
      - run: docker push lcbutch/tcs-service:$CIRCLE_BRANCH

workflows:
  version: 2

  build-test-deploy:
    jobs:
      - checkout-code-front
      - checkout-code-back
      - build-front:
          requires:
            - checkout-code-front
      - test-front:
          requires:
            - build-front
      - deploy-front:
          requires:
            - test-front
          filters:
            branches:
              only: master
      - build-back:
          requires:
            - checkout-code-back
      - test-back:
          requires:
            - build-back
      - deploy-back:
          requires:
            - test-back
          filters:
            branches:
              only: master
